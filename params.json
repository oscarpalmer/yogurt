{"name":"Yogurt","tagline":"A tiny templating engine.","body":"# Yogurt\r\n\r\n## What is Yogurt?\r\n\r\nDelicious. It's also a tiny templating engine for those who don't wish to use a big and clunky - read \"awesome\" - template engine like [Twig](//github.com/fabpot/Twig).\r\n\r\n### Why?\r\n\r\nLike I said, I disliked adding Twig to every little project that used templates. Twig is great, but it rarely fits the scope of my projects.\r\n\r\n## How?\r\n\r\nThe best way to learn how Yogurt works is to check out the example in [test](test). But if you want, you can read about the various Yogurt tags below and how they work.\r\n\r\n## Composer?\r\n\r\nYes, Yogurt is available via Composer on Packagist, but it's not required to use it; you can just require it as you would a regular file.\r\n\r\nThe only boring thing you'll need to do before the templating can begin is to tell your script to use Yogurt, like this: `use oscarpalmer\\Yogurt;` or `use oscarpalmer\\Yogurt as Delicious;` for a different name.\r\n\r\n### Variables\r\n\r\n`<!-- $variable -->`; renders the value of `$variable`.\r\n\r\n### Includes\r\n\r\n`<!-- include partial.html -->`\r\n\r\nReads, parses, and renders the included file if the file exists.\r\n\r\n### Foreach loops\r\n\r\n```html\r\n<!-- $list : $item -->\r\n  <p>Loop!</p>\r\n<!-- $list; -->\r\n```\r\n\r\nRenders the contained block for all direct descendants of `$list`.\r\n\r\n### If-statements\r\n\r\n```html\r\n<!-- if $variable is $variable -->\r\n  <p>Yay!</p>\r\n<!-- endif -->\r\n\r\n<!-- if $variable isnt \"value\" -->\r\n  <p>Yay?</p>\r\n<!-- endif -->\r\n```\r\n\r\nRenders the contained block if the statements is true.\r\n\r\n#### Else if\r\n\r\n```html\r\n<!-- else if $variable is $variable -->\r\n  <p>Yay!</p>\r\n<!-- endif -->\r\n\r\n<!-- else if $variable isnt \"value\" -->\r\n  <p>Yay?</p>\r\n<!-- endif -->\r\n```\r\n\r\nRenders the contained block if the statements is true and if the statement is used after a regular if or another else-if statement; see line 47-51 in [the template](test/template.html).\r\n\r\n#### If-exists\r\n\r\n```html\r\n<!-- if $variable -->\r\n  <p>Yay!</p>\r\n<!-- endif -->\r\n\r\n<!-- else if $variable -->\r\n  <p>Yay!</p>\r\n<!-- endif -->\r\n```\r\n\r\nRenders the contained block if the variable `$variable` exists. The second statement should be used after a regular if or else-if statement.\r\n\r\n## Errors\r\n\r\nErrors are rendered \"silently\" as comments. Why? Because things that _can_ render _should_ render.\r\n\r\n## Todo\r\n\r\n+ caching?\r\n+ JavaScript version\r\n+ Ruby version\r\n\r\nYou are - as always - more than welcome to suggest additions and improvements. :blush:\r\n\r\n## Thanks to...\r\n\r\n... [Riot](http://riothq.com/) for making [Hammer](http://hammerformac.com/) where the inspiration for the syntax came. I'm using Hammer daily for my static experiments and hacks, and it's the best way to build simple static sites.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}